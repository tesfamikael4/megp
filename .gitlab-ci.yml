image: node:latest
stages:
  - merge
  - build
  - deploy

merge:
  stage: merge
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm install
    - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD^]"
    - pnpm -w run turbo run build  --filter "...[origin/main...HEAD^]"
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

build:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm install
    - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD^]"
    - pnpm -w run turbo run build:docker  --filter "...[origin/main...HEAD^]"
    - docker push $CONTAINER_TEST_IMAGE
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

deploy:
  stage: deploy
  script:
    - docker pull $CONTAINER_RELEASE_IMAGE
    - docker container rm -f next-app || true
    - docker run -d -p 5511:5511 --name next-app $CONTAINER_RELEASE_IMAGE
