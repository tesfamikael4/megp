image: node:latest
stages:
  - merge
  - build
  - deploy

merge:
  stage: merge
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm install
    - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD^]"
    - pnpm -w run turbo run build  --filter "...[origin/main...HEAD^]"
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind

  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
  before_script:
    - apk --update add nodejs npm git
    
    - npm install -g pnpm
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # - corepack enable
    # - corepack prepare pnpm@latest-8 --activate
    #- pnpm config set store-dir .pnpm-store
    
  script:
    - pnpm install
    - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD^]"
    - pnpm -w run turbo run build:docker  --filter "...[origin/main...HEAD^]"
    - docker push iam-fe
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
  script:
    - docker pull iam-fe
    - docker container rm -f iam-fe || true
    - docker run -d -p 5511:5511 --name iam-fe $iam-fe
