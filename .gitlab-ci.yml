# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- merge
- build
- test
variables:
  AWS_WEB_IDENTITY_TOKEN_FILE: "/tmp/web-identity-token"
merge:
  stage: merge
  image: node:20.7.0
  only:
  - merge_requests
  before_script:
  - corepack enable
  - corepack prepare pnpm@latest-8 --activate
  - pnpm config set store-dir .pnpm-store
  script:
  - pnpm install
  - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD]"
  - pnpm -w run turbo run build  --filter "...[origin/main...HEAD]" --concurrency=70%
  cache:
    key:
      files:
      - pnpm-lock.yaml
    paths:
    - ".pnpm-store"
build:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  rules:
  - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
  before_script:
  - apk --update add nodejs npm git
  - npm install -g pnpm
  script:
  - pnpm install --no-frozen-lockfile
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - pnpm -w run turbo run lint  --filter "...[origin/main...HEAD^]"
  - pnpm -w run turbo run gitops  --filter "...[origin/main...HEAD^]" --concurrency=70%
    -- $CI_PIPELINE_ID $GITLAB_PASSWORD
  cache:
    key:
      files:
      - pnpm-lock.yaml
    paths:
    - ".pnpm-store"
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
