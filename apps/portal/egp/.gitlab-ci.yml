stages:
  - build
  - push
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
build_egp:
  only:
    changes:
      - '*' # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
      - 'apps/portal/egp/**/*'
  stage: build
  script:
    - cd apps/portal/egp
    - docker build -t egp .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
push_portal:
  stage: push
  only:
    changes:
      - '*' # run pipeline if a root-level file like package.json or next.config.js is changed
      - 'apps/portal/egp/**/*' # run pipeline if any changes occur in the pages directory
      - 'packages/fe/core-fe/**/*' # run pipeline if any changes occur in the components directory
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

deploy_portal:
  stage: deploy
  only:
    changes:
      - '*'
      - 'apps/portal/egp/**/*'
  script:
    - docker pull $CONTAINER_RELEASE_IMAGE
    - docker container rm -f egp || true
    - docker run -d -p 5500:5500 --name egp $CONTAINER_RELEASE_IMAGE
