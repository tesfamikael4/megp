stages:
  - build
  - test
  - push
  - deploy
variables:
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build_demo_fe:
  stage: build
  only:
    changes:
      - "*"  # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
      - "apps/back-office/+demo-fe/**/*" 

  image: docker:latest
  services:
    - docker:dind
  script:
    - cd apps/back-office/+demo-fe
    - docker build -t demo-fe:$CI_COMMIT_REF_SLUG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    #- docker push demo-fe:$CI_COMMIT_REF_SLUG


push_demo_fe:
  stage: push
  only:
    changes:
      - "*"  # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
      - "apps/back-office/+demo-fe/**/*" 

  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull demo-fe:$CI_COMMIT_REF_SLUG
    - docker tag demo-fe:$CI_COMMIT_REF_SLUG demo-fe:latest
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push demo-fe:latest

deploy_demo_fe:
  stage: deploy
  only:
    changes:
      - "*"  # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
      - "apps/back-office/+demo-fe/**/*" 

  script:
    - docker pull demo-fe:latest
    - docker
