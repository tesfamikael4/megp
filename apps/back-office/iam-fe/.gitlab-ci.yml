stages:
  - build
  - push
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build_iam-fe:
  stage: build
  only:
    changes:
      - "*"  # run pipeline if a root-level file like package.json or next.config.js is changed
      - "apps/back-office/iam-fe/**/*" # run pipeline if any changes occur in the pages directory
      - "packages/fe/core-fe/**/*"# run pipeline if any changes occur in the components directory
  script:
    - cd apps/back-office/iam-fe
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

push_iam-fe:
  stage: push
  only:
    changes:
      - "*"  # run pipeline if a root-level file like package.json or next.config.js is changed
      - "apps/back-office/iam-fe/**/*" # run pipeline if any changes occur in the pages directory
      - "packages/fe/core-fe/**/*" # run pipeline if any changes occur in the components directory
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

deploy:
  stage: deploy
  only:
    changes:
      - "*"  # run pipeline if a root-level file like package.json or next.config.js is changed
      - "apps/back-office/iam-fe/**/*" # run pipeline if any changes occur in the pages directory
      - "packages/fe/core-fe/**/*" # run pipeline if any changes occur in the components directory
  script:
    - docker pull $CONTAINER_RELEASE_IMAGE
    - docker container rm -f next-app || true
    - docker run -d -p 5511:5511 --name next-app $CONTAINER_RELEASE_IMAGE




# stages:
#   - build
#  # - test
#   - deploy

# variables:
#   CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# before_script:
#   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# build:
#   stage: build
#   only:
#     changes:
#       - "*"  # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
#       - "apps/back-office/iam-fe/**/*" 
#       - "packages/fe/core-fe/**/*"
#   script:
#     - cd apps/back-office/iam-fe
#     - docker build -t $CONTAINER_TEST_IMAGE .
#     - docker push $CONTAINER_TEST_IMAGE

# deploy:
#   stage: deploy
#   only:
#     changes:
#       - "*"  # run pipeline if a root-level file like Makefile or docker-compose.yml is changed
#       - "apps/back-office/iam-fe/**/*" 
#       - "packages/fe/core-fe/**/*"
#   script:
#     - docker pull $CONTAINER_RELEASE_IMAGE
#     - docker container rm -f iam-fe || true
#     - docker run -d -p 5511:5511 --name iam-fe $CONTAINER_RELEASE_IMAGE

